////////// data //////////

var dataset;

var formatDateIntoDay = d3.timeFormat("%d");
var formatDate = d3.timeFormat("%a %d");
var parseDate = d3.timeParse("%d/%m/%y/%H:%M");

var startDate = new Date("2022-03-31"),
    endDate = new Date("2022-05-03");

var getExpenseValue = function(d) {
    return Math.sqrt(d.expense) * 3
}
var getExpenseValueZoom = function(d) {
    return Math.sqrt(d.expense) * 3 * Math.random() * 2
};

////////// measures //////////

var margin = {
        top: 0,
        right: 50,
        bottom: 0,
        left: 50
    },
    width = window.innerWidth - margin.left - margin.right,
    height = 200 - margin.top - margin.bottom,
    fullHeight = window.innerHeight - height,
    fullWidth = window.innerWidth,
    halfWidth = window.innerWidth / 2,
    halfHeight = window.innerHeight / 2;

var ScreenRatioScale = (fullHeight + fullWidth) / 400;

////////// generate position //////////

function genPos(d) {
    // return "translate (" + Math.random() * (width - 200) + 100 + "," + Math.random() * fullHeight + 100 + ") rotate(" + Math.random() * 360 + ") scale(" + d.expense / 10 + ")"
    return "translate (" + Math.random() * (width - 200) + 100 + "," + Math.random() * fullHeight + 100 + ") rotate(" + Math.random() * 360 + ") scale(" + Math.sqrt(Math.sqrt(d.expense / ScreenRatioScale)) + ")"
}

function genPosStart(d) {
    // return "translate (" + Math.random() * (width - 200) + 100 + "," + Math.random() * fullHeight + 100 + ") rotate(" + Math.random() * 360 + ") scale(" + d.expense / 10 + ")"
    return "translate (" + Math.random() * (width - 200) + 100 + "," + Math.random() * fullHeight + 100 + ") rotate(" + Math.random() * 360 + ") scale(0)";
}

console.log(ScreenRatioScale);

////////// colors //////////

let black = "#000000",
    red = "#ff3333",
    rose = "#ffcccc",
    violet = "#663399",
    navy = "#000066";

var colors = {
    "bills": black,
    "items": rose,
    "food": red,
    "clothes": violet,
    "travel": navy,
}

////////// slider //////////

var svgSlider = d3.select("#slider")
    .append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", 200);

var x = d3.scaleTime()
    .domain([startDate, endDate])
    .range([0, width])
    .clamp(true);

var y = (hour) => (fullHeight - 250 - (fullHeight - 250) * hour / 24) + halfHeight / 1.5;

var slider = svgSlider.append("g")
    .attr("class", "slider")
    .attr("transform", "translate(" + margin.left + "," + height / 2 + ")");

slider
    .append("line")
    .attr("class", "track")
    .attr("x1", x.range()[0])
    .attr("x2", x.range()[1])
    .select(function() {
        return this.parentNode.appendChild(this.cloneNode(true));
    })
    .attr("class", "track-inset")
    .select(function() {
        return this.parentNode.appendChild(this.cloneNode(true));
    })
    .attr("class", "track-overlay")
    .call(d3.drag()
        .on("start.interrupt", function() {
            slider.interrupt();
        })
        .on("start drag", function() {
            update(x.invert(d3.event.x));
        }));

slider
    .insert("g", ".track-overlay")
    .attr("class", "ticks")
    .attr("transform", "translate(0," + 18 + ")")
    .selectAll("text")
    .data(x.ticks(34))
    .enter()
    .append("text")
    .attr("x", x)
    .attr("y", 10)
    .attr("text-anchor", "middle")
    .text(function(d) {
        return formatDateIntoDay(d);
    });

var handle = slider.insert("circle", ".track-overlay")
    .attr("class", "handle")
    .attr("r", 10);

var label = slider.append("text")
    .attr("class", "label")
    .attr("text-anchor", "middle")
    .text(formatDate(startDate))
    .attr("transform", "translate(0," + (-25) + ")")

////////// plot //////////

var svgPlot = d3.select("#vis")
    .append("svg")
    .attr("id", "canvas")
    .attr("width", fullWidth * 1.2)
    .attr("height", height);

var plot = svgPlot.append("g")
    .attr("class", "plot")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

////////// csv //////////

d3.csv("/assets/data/expenses_max.csv", prepare, function(data) {
    dataset = data;
    drawPlot(dataset);
})

function prepare(d) {
    d.id = d.id;
    d.date = parseDate(d.date);
    d.expense = d.expense;
    d.type = d.type
    d.timestamp = Date.parse(d.date);
    d.xpos = parseInt(x(d.date));
    return d;
}

////////// draw plot //////////

function drawPlot(data) {
    var locations = plot.selectAll(".location")
        .data(data);

    var hotDog = plot.selectAll(".hot-dog")
        .data(data);

    var PopUp = d3.select("#vis")
        .append("div")
        .attr("class", "popup");

    var mouseover = function() {
        PopUp
            .style("display", "block")
    }

    var mousemove = function(d) {
        PopUp
            .style("font-family", "helvetica")
            .style("font-size", "1.5em")
            .html("<p>" + d.text + "</p><h1>CHF " + d3.format(",.2f")(d.expense) + "</h1>");
    }

    var mouseleave = function() {
        PopUp
            .style("display", "none")
    }

    ////////// color generation //////////

    var randomColor = () => {
        let n = (Math.random() * 0xfffff * 1000000).toString(16);
        return '#' + n.slice(0, 6);
    };

    locations
        .enter()
        .append("g")
        .attr("class", "location")
        .attr("transform", genPosStart)
        // .attr("viewBox", "0 0 300 300")
        .attr("width", getExpenseValue)
        .attr("height", getExpenseValue)
        .style("opacity", 0)
        .style("fill", randomColor)
        .html(`
        <path class="bun" d="M19.72,1.12C11.58,1.64,5.03,4.12,6.53,11.64c.72,3.6,3.75,6.7,7.37,8.67,3.61,1.97,7.77,2.96,11.89,3.75,19.24,3.71,39.46,3.66,57.72-1.6,5.73-1.65,11.41-3.9,15.35-7.81,2.64-2.62,4.35-6.64,2.08-9.7-1.69-2.28-4.98-3.2-8.01-3.69-16.55-2.68-33.15,2.01-49.86,1.14-4.66-.24-14.87-1.83-23.35-1.29Z"/>
        <path class="dog" style="fill: #262262;" d="M23.01,21.94c-.89-.2-1.78-.4-2.66-.62-5.7-1.42-11.45-3.45-15.77-7.43C1.83,11.36-1.14,6.29,.44,2.41c2.11-5.16,9.58-.85,12.13,1.86,4.75,5.06,20.69,6.46,32.93,6.2,12.24-.25,26.79-1.02,38.7-3.85,6.96-1.65,25.1-5.92,20.64,3.24,2.86,10.68-53.58,18.29-81.84,12.07Z"/>
        <path class="sauce-red" style="fill: #bf1e2d;" d="M14.66,9.12c1.81-.07,3.6-.34,5.41-.51,.88-.08,1.77-.15,2.65-.14,.21,0,.42,0,.63,.01,.09,0,.18,0,.27,.01,.44,.02-.03-.02-.09-.01,.41-.02,.9,.12,1.29,.2,.2,.04,.39,.09,.59,.15,.02,0,.3,.07,.33,.1,0,0-.46-.19-.2-.07,.4,.17,.8,.35,1.17,.58,.05,.03,.26,.13,.3,.19-.03-.04-.45-.36-.08-.05,.15,.13,.3,.25,.45,.38,.55,.46,1.12,.88,1.71,1.28,1.64,1.12,3.51,1.91,5.43,2.4,2.84,.71,6.15,.82,8.85-.41,1.82-.83,2.98-2.28,4.35-3.66,.14-.14,.28-.26,.42-.4,.18-.18-.14,.11-.16,.12,.07-.02,.2-.16,.28-.21,.17-.12,.35-.23,.53-.34,.08-.05,.16-.09,.25-.13,.5-.27-.25,.05,.07-.03,.24-.06,.48-.17,.72-.23,.14-.04,.29-.07,.43-.1,.03,0,.37-.08,.1-.03-.29,.05,.12-.02,.19-.02,.09-.01,.19-.02,.29-.03,.24-.02,.49-.04,.73-.04,.12,0,.23,0,.35,0,.23,0,.23,.12-.11-.02,.14,.05,.34,.04,.48,.07,.21,.04,.41,.08,.61,.14,.07,.02,.15,.04,.22,.06,.29,.07,.2,.22-.1-.05,.22,.19,.67,.29,.93,.44,.15,.08,.3,.17,.44,.26,.11,.07,.62,.42,.28,.18s.11,.09,.2,.16c.13,.1,.26,.21,.4,.32,.28,.23,.55,.47,.82,.71,.54,.48,1.06,.96,1.62,1.42,1.31,1.09,2.73,2,4.4,2.43,1.41,.36,2.91,.3,4.31-.08,1.97-.53,3.66-1.76,5.35-2.87,.4-.26,.81-.52,1.22-.76,.2-.12,.4-.23,.61-.34,.1-.05,.2-.11,.31-.16,.06-.03,.12-.06,.18-.09,.28-.14-.28,.13-.29,.13,.47-.17,.92-.37,1.4-.5,.1-.03,.19-.05,.29-.07,.52-.13-.41,.05-.11,.01,.26-.03,.51-.06,.77-.07s.5,.02,.75,0c.23,0-.38-.04-.34-.03,.07,.02,.15,.01,.22,.03,.15,.02,.3,.04,.46,.07,.28,.05,.55,.12,.82,.2,.14,.04,.28,.1,.43,.14,.29,.08-.51-.21-.23-.08,.08,.04,.17,.07,.25,.1,.67,.28,1.32,.63,1.94,1.02,.19,.12,.38,.25,.57,.37,.05,.03,.3,.2,.03,.02-.41-.28,.39,.28,.3,.21,.46,.33,.92,.65,1.42,.91,2.15,1.13,4.59,1.37,6.75,.15,.79-.45,1.48-1.1,2.12-1.75,.19-.2,.57-.45,.71-.69,0,.01-.4,.29-.19,.17,.08-.05,.16-.12,.24-.17,.17-.11,.36-.2,.52-.31,.22-.14-.2,.12-.21,.09,0,0,.25-.09,.29-.11s.29-.09,.3-.08c.01,.04-.49,.02-.22,.04,.08,0,.52-.09,.55-.02,.02,.05-.61-.14-.13,0,.11,.03,.22,.05,.33,.08,1.21,.34,2.64-.6,2.85-1.83,.23-1.34-.53-2.49-1.83-2.85-2.17-.61-4.3,.27-5.94,1.67-.25,.22-.48,.44-.71,.68-.07,.08-.82,.74-.81,.78-.03-.08,.42-.31,.12-.1-.06,.04-.13,.09-.19,.13-.02,.01-.45,.3-.47,.28-.04-.05,.49-.17,.13-.06-.1,.03-.21,.07-.3,.1-.06,.02-.34,.08-.02,.02,.37-.07-.17,0-.21,0-.04,0-.35,.01-.06,.01,.31,0-.1-.02-.19-.03-.16-.03-.58-.06-.69-.17,0,0,.4,.18,.13,.05-.12-.06-.25-.11-.37-.16-.24-.12-.47-.24-.7-.38-.19-.11-.42-.22-.57-.37,.05,.05,.43,.31,.07,.05-.2-.14-.4-.28-.6-.42-.35-.24-.7-.48-1.06-.7-1.28-.77-2.72-1.39-4.2-1.66-2.57-.47-5.01,.13-7.27,1.36-1.69,.91-3.18,2.16-4.9,3.02-.1,.05-.48,.23-.06,.03s.04-.02-.06,.02c-.21,.09-.43,.17-.65,.23s-.44,.11-.66,.17c-.34,.09,.59-.07,.24-.04-.14,.01-.27,.03-.41,.04-.11,0-.22,.01-.33,.01-.06,0-.12,0-.17,0h-.08c-.21-.01-.21,0,0,0,.05,.06,.25,.04,0,0-.1-.02-.2-.03-.29-.05-.19-.03-.38-.08-.57-.13-.07-.02-.22-.09-.27-.08,0,0,.5,.21,.27,.1-.15-.07-.3-.13-.45-.2-.33-.16-.66-.35-.96-.55-.06-.04-.11-.08-.17-.12-.22-.14,.25,.18,.24,.17-.12-.13-.31-.24-.45-.34-.28-.22-.55-.45-.81-.69-.52-.46-1.03-.94-1.57-1.39-1.36-1.16-2.82-2.13-4.53-2.67-1.95-.62-4.15-.49-6.09,.09-2,.6-3.48,1.9-4.85,3.42-.26,.29-.52,.57-.79,.84-.08,.08-.17,.15-.25,.23-.26,.25,0-.1,.09-.06-.06-.02-.52,.37-.59,.41-.08,.05-.16,.1-.24,.14-.06,.03-.42,.23-.16,.1,.23-.12-.16,.07-.24,.09-.21,.08-.43,.14-.65,.19-.12,.03-.24,.05-.35,.08-.37,.09,.59-.08,.11-.02-.31,.04-.61,.07-.92,.09-.34,.02-.69,.03-1.03,.02-.17,0-.34,0-.51-.02-.07,0-.15-.01-.22-.01-.29,0,.52,.06,.08,0-.8-.1-1.58-.23-2.36-.44-.2-.05-.4-.11-.59-.17-.07-.02-.71-.25-.39-.12s-.3-.12-.39-.16c-.26-.11-.52-.23-.78-.36-.42-.21-.82-.43-1.21-.67-.2-.13-.4-.26-.6-.39,.03,.02,.32,.24,.1,.07-.14-.11-.28-.21-.42-.32-.83-.66-1.63-1.35-2.59-1.83-3.54-1.77-7.53-1.19-11.31-.78-.88,.09-1.75,.17-2.63,.21-1.25,.05-2.4,1.21-2.29,2.5,.11,1.3,1.16,2.34,2.5,2.29h0Z"/>
        <path class="sauce-yellow" style="fill: #fff200;" d="M89.95,6.55c-2.8,.13-5.33,1.31-7.93,2.22-.61,.21-1.23,.41-1.85,.56-.14,.03-.28,.06-.42,.09-.42,.1,.47-.06,.05,0-.3,.04-.59,.07-.89,.08-.16,0-.32,0-.47,0-.42,0,.49,.08,.08,.01-.29-.05-.57-.1-.85-.18-.06-.02-.13-.06-.19-.06,0,0,.49,.22,.28,.1-.12-.07-.26-.12-.38-.18-.4-.21-.78-.44-1.17-.65-2.77-1.48-5.77-2.65-8.92-2.86-2.53-.17-4.73,.87-6.83,2.18-1.24,.77-2.45,1.6-3.72,2.32-.3,.17-.6,.33-.9,.49-.08,.04-.65,.31-.33,.16,.3-.14-.23,.1-.33,.13-.3,.12-.61,.22-.92,.31-.15,.04-.31,.08-.46,.12-.08,.02-.15,.03-.23,.05-.27,.06,.35-.02,.01,0-.24,0-1.09,.22-1.28,.06,0,0,.43,.06,.15,.02-.09-.01-.18-.02-.28-.04-.21-.03-.42-.08-.63-.14-.02,0-.26-.08-.26-.08,.01-.02,.43,.19,.18,.06-.16-.09-.33-.15-.5-.24-.08-.04-.56-.33-.3-.16s0,0-.05-.04c-.1-.08-.2-.17-.3-.25-.15-.14-.3-.28-.44-.43-.1-.1-.19-.21-.28-.31-.02-.03-.24-.29-.06-.07s-.04-.05-.06-.08c-.06-.08-.13-.16-.19-.24-.15-.19-.3-.38-.45-.56-.62-.76-1.23-1.55-2.01-2.17-1.75-1.39-3.86-2.03-6.08-1.65-1.86,.32-3.41,1.36-4.76,2.65-.52,.5-1.01,1.04-1.51,1.56-.26,.27-.52,.55-.79,.81-.12,.12-.25,.24-.38,.35-.06,.06-.13,.11-.19,.17-.24,.22,.35-.26,.08-.07-.28,.2-.55,.4-.85,.57-.08,.04-.55,.28-.26,.15s-.26,.09-.36,.13c-.19,.06-.37,.12-.56,.16-.04,0-.22,.03-.24,.06,0,0,.46-.06,.2-.03-.36,.04-.71,.08-1.06,.08-.14,0-.36-.05-.49-.02,.01,0,.47,.06,.21,.02-.08-.01-.16-.02-.24-.03-.38-.06-.76-.14-1.13-.25-.15-.04-.33-.14-.47-.15,0,0,.46,.19,.21,.08-.08-.03-.16-.06-.23-.09-.33-.14-.66-.3-.98-.47-.3-.16-.57-.35-.86-.52-.24-.15,.19,.14,.18,.13-.08-.03-.21-.16-.27-.2-.15-.12-.31-.24-.45-.37-.63-.54-1.19-1.16-1.81-1.72-1.65-1.48-3.75-2.42-5.98-1.85-.49,.12-.98,.35-1.39,.64-.26,.18-.5,.4-.74,.6-.06,.05-.13,.11-.19,.17-.23,.21,.36-.23,.1-.08-.38,.22,.02,.02,.22-.02,.12-.02,.27-.04,.39-.03,.08,.01,.34,.18,.16,.03-.35-.3-.87-.51-1.27-.75-.88-.52-1.77-1.04-2.65-1.56-1.08-.63-2.7-.13-3.24,1-.57,1.22-.16,2.56,1,3.24,.89,.52,1.77,1.04,2.65,1.56,1.03,.61,2.06,1.31,3.31,1.27,1.19-.05,2.1-.73,2.95-1.49,.2-.18-.15,.13-.16,.13,.01,0,.19-.12,.21-.14,.24-.2-.4,.13-.1,.05,.25-.07-.18,.02-.19,.01,.01,.01,.51-.02,.51-.02-.02,.04-.44-.09-.19,0,.1,.03,.23,.06,.34,.08,.25,.03-.16-.05-.19-.08,.03,.04,.19,.08,.24,.11,.18,.08,.34,.19,.51,.29,.24,.13-.05-.03-.08-.06,.11,.09,.23,.18,.34,.28,.19,.17,.38,.34,.56,.52,.59,.57,1.15,1.16,1.79,1.66,1.4,1.09,2.88,1.91,4.58,2.43s3.43,.54,5.12,.18,3.23-1.34,4.53-2.53c.56-.51,1.07-1.06,1.58-1.61,.24-.25,.48-.51,.72-.75,.12-.12,.25-.24,.37-.36,.06-.06,.13-.12,.19-.17,.02-.02,.44-.38,.15-.14-.26,.22,.16-.11,.23-.17,.14-.1,.28-.19,.43-.28s.3-.16,.45-.25c.24-.14-.16,.09-.17,.07,0,0,.3-.11,.33-.12,.09-.03,.7-.19,.42-.13s.26-.02,.35-.02,.64,.02,.35,0,.02,0,.06,.02c.12,.03,.25,.05,.37,.07,.09,.02,.18,.06,.27,.08,.3,.06-.18-.05-.16-.06,.04-.03,.46,.22,.51,.25,.09,.05,.27,.13,.35,.21-.02-.02-.32-.27-.12-.07,.17,.16,.36,.3,.53,.47,.29,.28,.56,.59,.82,.9-.27-.32,.02,.03,.12,.16,.17,.21,.34,.43,.51,.64,1.35,1.68,2.86,3.01,4.99,3.61,3.45,.97,6.91-.61,9.79-2.39,1.25-.77,2.45-1.61,3.73-2.32,.27-.15,.55-.29,.82-.43,.39-.2-.42,.17-.02,0,.15-.06,.31-.13,.46-.18,.21-.08,.43-.15,.65-.2,.08-.02,.17-.03,.26-.05-.23,.07-.59,.08-.19,.04,.46-.04,.91-.05,1.37-.03s-.3-.04-.14-.01c.12,.02,.25,.03,.37,.05,.31,.04,.62,.1,.93,.16,.62,.13,1.24,.3,1.84,.5,.07,.02,.69,.24,.34,.11s.19,.08,.28,.11c.38,.15,.75,.31,1.12,.48,1.57,.71,3.03,1.77,4.71,2.21,1.45,.37,2.96,.23,4.41-.08,2.58-.55,4.92-1.85,7.48-2.46,.15-.04,.29-.06,.44-.1,.4-.09-.48,.06,.06,0,.32-.04,.63-.07,.95-.09,1.25-.06,2.4-1.21,2.29-2.5s-1.16-2.35-2.5-2.29h0Z"/>
        <path class="bun" d="M24.64,13.85c-8.14,.52-14.69,3-13.19,10.53,.72,3.6,3.75,6.7,7.37,8.67s7.77,2.96,11.89,3.75c19.24,3.71,39.46,3.66,57.72-1.6,5.73-1.65,11.41-3.9,15.35-7.81,2.64-2.62,4.35-6.64,2.08-9.7-1.69-2.28-4.98-3.2-8.01-3.69-16.55-2.68-33.15,2.01-49.86,1.14-4.66-.24-14.87-1.83-23.35-1.29Z"/>
        `)
        .on("mouseover", mouseover)
        .on("mousemove", mousemove)
        .on("mouseleave", mouseleave);


    PopUp.on("mouseover", mouseover)
        .on("mousemove", mousemove)
        .on("mouseleave", mouseleave);

    locations
        .exit()
        .remove();
}

////////// linking //////////

d3.select("#info-link")
    .attr("href", "#info-text")
    .html('about &#8594;');

document.addEventListener('scroll', function() {
    // lastKnownScrollPosition = window.scrollX;

    if (window.scrollX > 10) {
        d3.select("#info-link")
            .attr("href", "#body")
            .html('&#8592; less');
    } else {
        d3.select("#info-link")
            .attr("href", "#info-text")
            .html('more &#8594;');
    }
});

////////// update //////////

d3.select("#trans")
    .on("change", update);

function update(h) {

    // update position and text of label according to slider scale
    if (d3.select("#trans").property("checked")) {
        d3.selectAll(".bun")
            .style("fill-opacity", "0");
    } else {
        d3.selectAll(".bun")
            .style("fill-opacity", "1");
    }

    if (
        h == undefined
    ) {
        return
    }

    var randomColorDyn = () => {
        let n = (Math.random() * 0xfffff * 1000000).toString(16);
        return '#' + n.slice(0, 6);
    };

    var indexColors = d3.selectAll(".index-color-circle")

    indexColors
        .style("background-color", randomColorDyn);

    handle
        .attr("cx", x(h));
    label
        .attr("x", x(h))
        .text(formatDate(h));

    plot.selectAll(".location")
        .filter(function(d) { return d.timestamp > Date.parse(h) }) //select all the countries and prepare for a transition to new values
        .attr("transform", genPosStart)
        .style("opacity", 0)

    plot.selectAll(".location")
        .filter(function(d) { return d.timestamp <= Date.parse(h) }) //select all the countries and prepare for a transition to new values
        .transition()
        .duration(200)
        .attr("transform", genPos)
        .style("opacity", 1);
}